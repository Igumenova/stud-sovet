@import url("https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Source+Code+Pro:wght@300;400;500&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0");

:root {
    --dark: #444;
    --dark-gray: #999;
    --gray: #eee;
    --info: #134f6a;
    --ok: #04b4ac;
    --bad: #c84152;
}


@mixin unselectable {
    -moz-user-select: none;
    -khtml-user-select: none;
    -webkit-user-select: none;
    user-select: none;
}

@mixin scrollbars($size, $foreground-color: var(--dark), $background-color: var(--gray)) {

    // для Chrome и Safari
    &::-webkit-scrollbar {
        width: $size;
        height: $size;
    }

    &::-webkit-scrollbar-thumb {
        background: $foreground-color;
    }

    &::-webkit-scrollbar-track {
        background: $background-color;
    }

    // по стандартам (Firefox)
    scrollbar-color: $foreground-color $background-color;
}

@mixin color_control($color) {
    background-color: var(--gray);
    color: var(--dark);
    border: 0.1rem solid var(--gray);
    transition: background-color 0.3s, color 0.3s, border 0.3s;
    cursor: pointer;

    * {
        cursor: pointer;
    }

    &:hover,
    &.active {
        background-color: $color;
        border: 0.1rem solid $color;
        color: white;
    }

    &:active {
        opacity: 0.9;
    }
}

@mixin color_control_inverse($color) {
    background-color: $color;
    color: white;
    border: 0.1rem solid $color;
    transition: opacity 0.3s, background-color 0.3s, color 0.3s, border 0.3s;
    cursor: pointer;
    opacity: 0.8;

    * {
        cursor: pointer;
    }

    &:hover,
    &.active {
        opacity: 1;
    }

    &:active {
        opacity: 0.8;
    }
}

@mixin select_sizes ($start, $end) {
    .select {
        height: $start;

        &__container {
            height: $start;

            &:hover {
                height: $end;
            }

            &.done {
                height: $start;
            }
        }

        &__item label {
            height: $start - 2rem;
        }

    }

}

* {
    @include scrollbars(0);
    margin: 0;
    padding: 0;
    font-family: "Montserrat", sans-serif;
    text-decoration: none;
    box-sizing: border-box;
    font-size: 1rem;
}

html {
    font-size: 16px;
}


h1 {
    font-size: 3rem;
}

h2 {
    font-size: 2rem;
}

h3 {
    font-size: 1.2rem;
}

a:not(:has(.btn)) {
    color: var(--info);
    opacity: 0.6;
    transition: opacity 0.3s;

    &:hover {
        opacity: 1;
        text-decoration: underline;
    }
}

ul.text,
ul.decorate {
    counter-reset: list;
    list-style-type: none;
    font-weight: 600;
    width: 100%;

    li {
        margin-left: 0.5rem;
        position: relative;
        font-size: 1rem;
        font-weight: 400;

        &:before {
            content: "—";
            padding-right: 0.5rem;
            counter-increment: list;
        }
    }
}

ul.decorate {
    li {
        &:first-child {
            border-top-right-radius: 0.2rem;
            border-top-left-radius: 0.2rem;
            margin-top: 1rem;
        }

        &:last-child {
            border-bottom: 0.1rem solid var(--dark);
            border-bottom-right-radius: 0.2rem;
            border-bottom-left-radius: 0.2rem;
        }

        padding: 0.5rem 1rem;
        border-right: 0.1rem solid var(--dark);
        border-left: 0.1rem solid var(--dark);
        border-top: 0.1rem solid var(--dark);

        &:before {
            content: counter(list);
            position: absolute;
            width: 1rem;
            height: 1rem;
            padding: 0.2rem;
            background-color: var(--info);
            color: white;
            font-weight: 600;
            top: -0.6rem;
            left: -0.6rem;
            font-size: 0.8rem;
            border-radius: 50%;
            text-align: center;
        }
    }
}

.container {
    width: 100vw;
    min-height: 100vh;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-auto-rows: 25rem;
    background-color: var(--gray);

    .block {
        padding: 1rem;
        margin: 1rem;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: 1rem;
        background-color: white;
        border-radius: 0.5rem;
        position: relative;
    }
}

.btn {
    border-radius: 0.2rem;
    padding: 0.5rem 1rem;
    line-height: 1.5rem;
    border: none;
    outline: none;
    font-weight: 600;

    &:has(a) {
        padding: 0;
    }

    &:has(.material-symbols-outlined) {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 1rem;

        .material-symbols-outlined {
            font-size: 1.2rem;
        }
    }
}

.ok {
    @include color_control(var(--ok));
}

.info {
    @include color_control(var(--info));
}

.bad {
    @include color_control(var(--bad));
}

.ok-inv {
    @include color_control_inverse(var(--ok));
}

.info-inv {
    @include color_control_inverse(var(--info));
}

.bad-inv {
    @include color_control_inverse(var(--bad));
}

.switch {
    &__label {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        cursor: pointer;
    }

    &__circle {
        height: 1.5rem;
        width: 3rem;
        border-radius: 10rem;
        background-color: var(--gray);
        position: relative;
        transition: background-color 0.3s;

        &::after {
            content: " ";
            position: absolute;
            background-color: white;
            width: 1.1rem;
            height: 1.1rem;
            border-radius: 50%;
            left: 0;
            border: 0.2rem solid var(--gray);
            transition: background-color 0.3s, left 0.3s;
        }
    }

    &__input {
        display: none;
    }

    &:has(input:checked) &__circle {
        background-color: var(--info);
        position: relative;

        &::after {
            content: " ";
            position: absolute;
            left: 1.5rem;
            background-color: white;
            border: 0.2rem solid var(--info);
        }
    }
}

.radio {
    &__label {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        cursor: pointer;
    }

    &__circle {
        height: 1.5rem;
        width: 1.5rem;
        border-radius: 50%;
        background-color: var(--gray);
        position: relative;
        transition: background-color 0.3s;

        &::after {
            content: " ";
            position: absolute;
            background-color: white;
            width: 0.6rem;
            height: 0.6rem;
            border-radius: 50%;
            left: 0.45rem;
            top: 0.45rem;
            transition: background-color 0.3s;
        }
    }

    &__input {
        display: none;
    }

    &:has(input:checked) &__circle {
        background-color: var(--info);
        position: relative;

        &::after {
            content: " ";
            position: absolute;
            background-color: white;
        }
    }
}

.accardion-item {
    overflow: hidden;

    &:first-child,
    &:first-child &__header {
        border-top-left-radius: 0.4rem;
        border-top-right-radius: 0.4rem;
    }

    &:last-child,
    &:last-child &__header:has(input:not(:checked)),
    &:last-child &__body {
        border-bottom-left-radius: 0.4rem;
        border-bottom-right-radius: 0.4rem;
    }

    &:last-child &__body {
        border-bottom: 0.1rem solid var(--gray);
    }

    &__header {
        @include color_control(var(--info));
        border: 0.1rem solid var(--gray);
        background-color: white;
        width: 100%;
        transition: opacity 0.3s, border 0.3s, background-color 0.3s, color 0.3s,
            border-bottom-left-radius 0.6s, border-bottom-right-radius 0.6s;

        label {
            padding: 1rem;
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: space-between;
            font-weight: 600;
        }

        input {
            display: none;
        }
    }

    &__icon {
        transform: rotate(0deg);
        transition: transform 0.2s;
    }

    &__body {
        @include scrollbars(0rem);
        border-left: 0.1rem solid var(--gray);
        border-right: 0.1rem solid var(--gray);
        background-color: white;
        overflow: scroll;
        max-height: 0;
        padding: 0rem 1rem;
        width: 100%;
        transition: max-height 0.4s;

        &>* {
            width: 100%;
            margin: 1rem 0rem;
        }


        &:has(table) {
            padding: 0;

            &>* {
                margin: 0;
            }
        }
    }

    &__header:has(input:checked) {
        border: .1rem solid var(--gray);
    }

    &__header:has(input:checked)+&__body {
        max-height: 30rem;
        transition: max-height 1s 0.4s;
    }

    &__header:has(input:checked) &__icon {
        transform: rotate(180deg);
    }
}

.select {
    --start: 3.2;
    --end: 9.5;
    --background: var(--info);
    --color: var(#ffffff);

    width: 100%;
    position: relative;
    height: var(--start);

    &__container {
        border-radius: 0.4rem 0.4rem 0.4rem 0.4rem;
        //border: 0.1rem solid var(--gray);
        overflow: auto;
        position: absolute;
        top: 0;
        display: flex;
        flex-direction: column;
        width: 100%;
        max-height: var(--start);
        padding-top: var(--start);
        transition: max-height .2s;

        &:hover {
            max-height: var(--end);
            z-index: 1;
        }

        &.done {
            height: var(--start);
            transition: height 0s;
        }

        &:hover .select__item {
            &:has(input:checked) {
                border-radius: 0.4rem 0.4rem 0rem 0rem !important;
            }

            &:not(:has(~.select__item input:not(:checked))) {
                border-radius: 0rem 0rem 0.4rem 0.4rem;

                label {
                    border-radius: 0rem 0rem 0.4rem 0.4rem;
                }
            }
        }
    }

    &__item {
        width: 100%;
        background-color: white;
        color: var(--dark);

        &:has(input:checked) {
            background-color: var(--background);
            position: absolute;
            top: 0;
            color: var(--color);
            transform: none;
            display: block;

            label {
                transition: border 0s;
            }
        }

        &:not(:has(input:checked)) {
            label:hover {
                border: 0.1rem solid var(--dark);
            }
        }

        label {
            display: flex;
            cursor: pointer;
            align-items: center;
            justify-content: center;
            border: 0.1rem solid var(--gray);
            height: calc(var(--start) - 0rem);
            width: 100%;
            transition: border .3s;
        }

        input {
            display: none;
        }
    }
}

.input {
    display: flex;
    align-items: center;
    border-bottom: 0.1rem solid var(--gray);
    transition: border-bottom 0.3s;

    &:has(input:active) {
        border-bottom: 0.1rem solid var(--dark);
    }

    input {
        border: none;
        width: 100%;
        padding: 0.5rem 1rem;
        border-radius: 0.4rem;
        font-size: 1rem;
        outline: none;
        transition: border 0.3s;
    }

    &__icon {
        width: 2.5rem;
        height: 2.5rem;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--dark);
        cursor: pointer;

        &:hover {
            color: var(--info);
        }
    }
}

.textarea {
    width: 100%;
    height: 100%;
    position: relative;

    textarea {
        width: 100%;
        height: 100%;
        resize: none;
        padding: 1rem 2rem 1rem 1rem;
        border: 0.1rem solid var(--gray);
        outline: none;
        border-radius: 0.4rem;
    }

    &__icon {
        position: absolute;
        top: 0.5rem;
        right: 0.5rem;
        color: var(--dark);
        cursor: pointer;

        &:hover {
            color: var(--info);
        }
    }
}

body>.notification {
    position: fixed;
    top: -10rem;
    left: 50%;
    transform: translate(-50%, 0);
    animation: notification 8s forwards;
}

@keyframes notification {
    0% {
        top: -10rem;
    }

    10% {
        top: 2rem;
    }

    90% {
        top: 2rem;
    }

    100% {
        top: -10rem;
    }
}

.notification {
    color: white;
    padding: 1rem;
    border-radius: 0.4rem;
    display: flex;
    align-items: center;
    position: relative;

    &__bad {
        background-color: var(--bad);
    }

    &__ok {
        background-color: var(--ok);
    }

    &__info {
        background-color: var(--info);
    }

    &__close {
        @include color_control(var(--dark));
        width: 1.6rem;
        height: 1.6rem;
        border-radius: 50%;
        position: absolute;
        right: -0.8rem;
        top: -0.8rem;
        display: flex;
        align-items: center;
        justify-content: center;

        span {
            font-size: 1rem;
        }
    }
}

@keyframes loader_start {
    0% {
        z-index: -1;
        opacity: 0;
    }

    1% {
        z-index: 1;
        opacity: 0;
    }

    2% {
        opacity: 0;
    }

    100% {
        z-index: 1;
        opacity: 1;
    }
}

@keyframes loader_end {
    0% {
        opacity: 1;
        z-index: 1;
    }

    99% {
        z-index: 1;
        opacity: 0;
    }

    100% {
        z-index: -1;
        opacity: 0;
    }
}

@keyframes loader__anim {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(1080deg);
    }
}

.loader__filter {
    display: flex;
    z-index: -1;
    opacity: 0;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    backdrop-filter: blur(0.5rem) brightness(60%);
    position: absolute;
    top: 0;
    left: 0;

    &.load {
        animation: loader_start 0.5s forwards;
        opacity: 1;
        z-index: 1;
    }

    &.stop_load {
        animation: loader_end 0.5s forwards;
    }

    .loader__icon {
        width: 5rem;
        height: 5rem;
        position: relative;
        background-color: white;
        border-radius: 50%;

        .circle {
            width: 100%;
            height: 100%;
            position: absolute;

            &:after {
                content: " ";
                width: 2rem;
                height: 2rem;
                border-radius: 50%;
                position: absolute;
                top: 1rem;
                left: 1rem;
            }

            &.red {
                animation: loader__anim 3s infinite;

                &:after {
                    background-color: var(--bad);
                }
            }

            &.green {
                animation: loader__anim 3s 1s infinite;

                &:after {
                    background-color: var(--ok);
                }
            }

            &.blue {
                animation: loader__anim 3s 2s infinite;

                &:after {
                    background-color: var(--info);
                }
            }
        }
    }
}

.code {
    $light_red: hsla(0, 90%, 50%, 0.1);
    $light_green: hsla(120, 90%, 50%, 0.1);
    $red: hsla(0, 80%, 70%, 0.6);
    $green: hsla(120, 60%, 70%, 0.6);

    width: 100%;
    font-weight: 400;
    border-spacing: 0 0rem;

    * {
        font-family: "Source Code Pro", monospace;
        color: #000;
    }

    th {
        background-color: var(--ok);
        padding: 0.5rem 1rem;
        color: white;
        font-size: 0.8rem;
        font-weight: 400;
        text-align: start;
    }

    tbody {
        border: 0.1rem solid var(--gray);
        border-bottom-left-radius: 0.4rem;
        border-bottom-right-radius: 0.4rem;
    }

    .row {
        overflow: hidden;

        &.add {
            background-color: $light_green;

            .row__number:before {
                content: "+";
                color: darkgreen;
            }
        }

        &.remove {
            background-color: $light_red;

            .row__number:before {
                content: "-";
                color: darkred;
            }
        }

        &.add .row__number {
            background-color: $light_green;
        }

        &.add .change {
            background-color: #90ee9096;
        }

        &.remove .row__number {
            background-color: $light_red;
        }

        &.remove .change {
            background-color: #f0808066;
        }

        .change {
            padding: 0rem 0.2rem;
            border-radius: 0.2rem;
            line-height: 1rem;
        }

        &__number {
            user-select: none;
            white-space: nowrap;
            vertical-align: top;
            text-align: right;
            width: 1%;
            min-width: 3rem;
            font-weight: 300;
            padding: 0 1rem;
            line-height: 1.1rem;
            font-size: 0.8rem;
            position: relative;

            &:before {
                font-weight: 500;
                position: absolute;
                left: 0.2rem;
                font-size: 1rem;
            }
        }

        &__text {
            vertical-align: middle;
            line-height: 1.1rem;
            padding-left: 1.5rem;

            span {
                line-height: 1.1rem;
                font-size: 0.9rem;
            }

            pre {
                white-space: pre-wrap;
                /* Since CSS 2.1 */
                white-space: -moz-pre-wrap;
                /* Mozilla, since 1999 */
                white-space: -pre-wrap;
                /* Opera 4-6 */
                white-space: -o-pre-wrap;
                /* Opera 7 */
                word-wrap: anywhere;
                /* Internet Explorer 5.5+ */
            }
        }
    }
}